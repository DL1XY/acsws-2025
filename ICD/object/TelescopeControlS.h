// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.1.3
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_codegen.cpp:454

#ifndef _TAO_IDL__TMP__TELESCOPECONTROLS_H_
#define _TAO_IDL__TMP__TELESCOPECONTROLS_H_


#include "TelescopeControlC.h"
#include "baciS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/TypeCode_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_TELESCOPE_MODULE_TELESCOPECONTROL__SARG_TRAITS_)
#define _TELESCOPE_MODULE_TELESCOPECONTROL__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::TELESCOPE_MODULE::TelescopeControl>
    : public Object_SArg_Traits_T<
        ::TELESCOPE_MODULE::TelescopeControl_ptr,
        ::TELESCOPE_MODULE::TelescopeControl_var,
        ::TELESCOPE_MODULE::TelescopeControl_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_TELESCOPE_MODULE
{
  

  
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class TelescopeControl;
  typedef TelescopeControl *TelescopeControl_ptr;

  class  TelescopeControl
    : public virtual POA_ACS::CharacteristicComponent
  {
  protected:
    TelescopeControl ();
  
  public:
    /// Useful for template programming.
    typedef ::TELESCOPE_MODULE::TelescopeControl _stub_type;
    typedef ::TELESCOPE_MODULE::TelescopeControl_ptr _stub_ptr_type;
    typedef ::TELESCOPE_MODULE::TelescopeControl_var _stub_var_type;

    TelescopeControl (const TelescopeControl& rhs);
    virtual ~TelescopeControl () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::TELESCOPE_MODULE::TelescopeControl *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void setTo (
      ::CORBA::Double altitude,
      ::CORBA::Double azimuth) = 0;

    static void setTo_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void objfix (
      ::CORBA::Double altitude,
      ::CORBA::Double azimuth) = 0;

    static void objfix_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void offSet (
      ::CORBA::Double altOffset,
      ::CORBA::Double azOffset) = 0;

    static void offSet_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void zenith () = 0;

    static void zenith_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void park () = 0;

    static void park_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void setUncalibrated () = 0;

    static void setUncalibrated_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void calibrateEncoders () = 0;

    static void calibrateEncoders_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual ::ACS::RWdouble_ptr commandedAltitude () = 0;

    static void _get_commandedAltitude_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual ::ACS::RWdouble_ptr commandedAzimuth () = 0;

    static void _get_commandedAzimuth_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual ::ACS::ROdouble_ptr actualAltitude () = 0;

    static void _get_actualAltitude_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual ::ACS::ROdouble_ptr actualAzimuth () = 0;

    static void _get_actualAzimuth_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual ::ACS::RWpattern_ptr status () = 0;

    static void _get_status_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module TELESCOPE_MODULE

#endif /* ifndef */

