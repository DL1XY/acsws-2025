// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.1.3
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_codegen.cpp:148

#ifndef _TAO_IDL__TMP__SYSTEMERRC_H_
#define _TAO_IDL__TMP__SYSTEMERRC_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/String_Manager_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "acserrC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 1 || TAO_MICRO_VERSION != 3
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace ACSErr
{
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong SYSTEMErr = 900907U;


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module ACSErr
// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace SYSTEMErr
{
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong AlreadyInAutomatic = 0U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong PositionOutOfLimits = 1U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong ProposalNotYetReady = 2U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong InvalidProposalStatusTransition = 3U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong ImageAlreadyStored = 4U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong CameraIsOff = 5U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong SchedulerAlreadyRunning = 6U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong SchedulerAlreadyStopped = 7U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong NoProposalExecuting = 8U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong SystemInAutoMode = 9U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong CannotOpenDevice = 10U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong ProposalDoesNotExist = 11U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

  

  const CORBA::ULong TargetDoesNotExist = 12U;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  SYSTEMErrEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    SYSTEMErrEx ();
    SYSTEMErrEx (const SYSTEMErrEx &);
    ~SYSTEMErrEx () = default;

    SYSTEMErrEx &operator= (const SYSTEMErrEx &);

    static void _tao_any_destructor (void *);

    static SYSTEMErrEx *_downcast (::CORBA::Exception *);
    static const SYSTEMErrEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    SYSTEMErrEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_SYSTEMErrEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  AlreadyInAutomaticEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    AlreadyInAutomaticEx ();
    AlreadyInAutomaticEx (const AlreadyInAutomaticEx &);
    ~AlreadyInAutomaticEx () = default;

    AlreadyInAutomaticEx &operator= (const AlreadyInAutomaticEx &);

    static void _tao_any_destructor (void *);

    static AlreadyInAutomaticEx *_downcast (::CORBA::Exception *);
    static const AlreadyInAutomaticEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    AlreadyInAutomaticEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_AlreadyInAutomaticEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  PositionOutOfLimitsEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    PositionOutOfLimitsEx ();
    PositionOutOfLimitsEx (const PositionOutOfLimitsEx &);
    ~PositionOutOfLimitsEx () = default;

    PositionOutOfLimitsEx &operator= (const PositionOutOfLimitsEx &);

    static void _tao_any_destructor (void *);

    static PositionOutOfLimitsEx *_downcast (::CORBA::Exception *);
    static const PositionOutOfLimitsEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    PositionOutOfLimitsEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_PositionOutOfLimitsEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  ProposalNotYetReadyEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    ProposalNotYetReadyEx ();
    ProposalNotYetReadyEx (const ProposalNotYetReadyEx &);
    ~ProposalNotYetReadyEx () = default;

    ProposalNotYetReadyEx &operator= (const ProposalNotYetReadyEx &);

    static void _tao_any_destructor (void *);

    static ProposalNotYetReadyEx *_downcast (::CORBA::Exception *);
    static const ProposalNotYetReadyEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    ProposalNotYetReadyEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_ProposalNotYetReadyEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  InvalidProposalStatusTransitionEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    InvalidProposalStatusTransitionEx ();
    InvalidProposalStatusTransitionEx (const InvalidProposalStatusTransitionEx &);
    ~InvalidProposalStatusTransitionEx () = default;

    InvalidProposalStatusTransitionEx &operator= (const InvalidProposalStatusTransitionEx &);

    static void _tao_any_destructor (void *);

    static InvalidProposalStatusTransitionEx *_downcast (::CORBA::Exception *);
    static const InvalidProposalStatusTransitionEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    InvalidProposalStatusTransitionEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_InvalidProposalStatusTransitionEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  ImageAlreadyStoredEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    ImageAlreadyStoredEx ();
    ImageAlreadyStoredEx (const ImageAlreadyStoredEx &);
    ~ImageAlreadyStoredEx () = default;

    ImageAlreadyStoredEx &operator= (const ImageAlreadyStoredEx &);

    static void _tao_any_destructor (void *);

    static ImageAlreadyStoredEx *_downcast (::CORBA::Exception *);
    static const ImageAlreadyStoredEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    ImageAlreadyStoredEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_ImageAlreadyStoredEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  CameraIsOffEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    CameraIsOffEx ();
    CameraIsOffEx (const CameraIsOffEx &);
    ~CameraIsOffEx () = default;

    CameraIsOffEx &operator= (const CameraIsOffEx &);

    static void _tao_any_destructor (void *);

    static CameraIsOffEx *_downcast (::CORBA::Exception *);
    static const CameraIsOffEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    CameraIsOffEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_CameraIsOffEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  SchedulerAlreadyRunningEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    SchedulerAlreadyRunningEx ();
    SchedulerAlreadyRunningEx (const SchedulerAlreadyRunningEx &);
    ~SchedulerAlreadyRunningEx () = default;

    SchedulerAlreadyRunningEx &operator= (const SchedulerAlreadyRunningEx &);

    static void _tao_any_destructor (void *);

    static SchedulerAlreadyRunningEx *_downcast (::CORBA::Exception *);
    static const SchedulerAlreadyRunningEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    SchedulerAlreadyRunningEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_SchedulerAlreadyRunningEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  SchedulerAlreadyStoppedEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    SchedulerAlreadyStoppedEx ();
    SchedulerAlreadyStoppedEx (const SchedulerAlreadyStoppedEx &);
    ~SchedulerAlreadyStoppedEx () = default;

    SchedulerAlreadyStoppedEx &operator= (const SchedulerAlreadyStoppedEx &);

    static void _tao_any_destructor (void *);

    static SchedulerAlreadyStoppedEx *_downcast (::CORBA::Exception *);
    static const SchedulerAlreadyStoppedEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    SchedulerAlreadyStoppedEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_SchedulerAlreadyStoppedEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  NoProposalExecutingEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    NoProposalExecutingEx ();
    NoProposalExecutingEx (const NoProposalExecutingEx &);
    ~NoProposalExecutingEx () = default;

    NoProposalExecutingEx &operator= (const NoProposalExecutingEx &);

    static void _tao_any_destructor (void *);

    static NoProposalExecutingEx *_downcast (::CORBA::Exception *);
    static const NoProposalExecutingEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    NoProposalExecutingEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_NoProposalExecutingEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  SystemInAutoModeEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    SystemInAutoModeEx ();
    SystemInAutoModeEx (const SystemInAutoModeEx &);
    ~SystemInAutoModeEx () = default;

    SystemInAutoModeEx &operator= (const SystemInAutoModeEx &);

    static void _tao_any_destructor (void *);

    static SystemInAutoModeEx *_downcast (::CORBA::Exception *);
    static const SystemInAutoModeEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    SystemInAutoModeEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_SystemInAutoModeEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  CannotOpenDeviceEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    CannotOpenDeviceEx ();
    CannotOpenDeviceEx (const CannotOpenDeviceEx &);
    ~CannotOpenDeviceEx () = default;

    CannotOpenDeviceEx &operator= (const CannotOpenDeviceEx &);

    static void _tao_any_destructor (void *);

    static CannotOpenDeviceEx *_downcast (::CORBA::Exception *);
    static const CannotOpenDeviceEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    CannotOpenDeviceEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_CannotOpenDeviceEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  ProposalDoesNotExistEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    ProposalDoesNotExistEx ();
    ProposalDoesNotExistEx (const ProposalDoesNotExistEx &);
    ~ProposalDoesNotExistEx () = default;

    ProposalDoesNotExistEx &operator= (const ProposalDoesNotExistEx &);

    static void _tao_any_destructor (void *);

    static ProposalDoesNotExistEx *_downcast (::CORBA::Exception *);
    static const ProposalDoesNotExistEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    ProposalDoesNotExistEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_ProposalDoesNotExistEx;
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ch.cpp:40

  

  class  TargetDoesNotExistEx : public ::CORBA::UserException
  {
  public:
    ACSErr::ErrorTrace errorTrace;

    TargetDoesNotExistEx ();
    TargetDoesNotExistEx (const TargetDoesNotExistEx &);
    ~TargetDoesNotExistEx () = default;

    TargetDoesNotExistEx &operator= (const TargetDoesNotExistEx &);

    static void _tao_any_destructor (void *);

    static TargetDoesNotExistEx *_downcast (::CORBA::Exception *);
    static const TargetDoesNotExistEx *_downcast (::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc ();

    virtual ::CORBA::Exception *_tao_duplicate () const;

    virtual void _raise () const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
    // TAO_IDL - Generated from
    // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:50

    

    TargetDoesNotExistEx (
        const ACSErr::ErrorTrace & _tao_errorTrace);

    virtual ::CORBA::TypeCode_ptr _tao_type () const;
  };
  // TAO_IDL - Generated from
  // /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:33

  extern  ::CORBA::TypeCode_ptr const _tc_TargetDoesNotExistEx;


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module SYSTEMErr
// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::SYSTEMErrEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::SYSTEMErrEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::SYSTEMErrEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::AlreadyInAutomaticEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::AlreadyInAutomaticEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::AlreadyInAutomaticEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::PositionOutOfLimitsEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::PositionOutOfLimitsEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::PositionOutOfLimitsEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::ProposalNotYetReadyEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::ProposalNotYetReadyEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::ProposalNotYetReadyEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::InvalidProposalStatusTransitionEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::InvalidProposalStatusTransitionEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::InvalidProposalStatusTransitionEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::ImageAlreadyStoredEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::ImageAlreadyStoredEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::ImageAlreadyStoredEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::CameraIsOffEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::CameraIsOffEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::CameraIsOffEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::SchedulerAlreadyRunningEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::SchedulerAlreadyRunningEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::SchedulerAlreadyRunningEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::SchedulerAlreadyStoppedEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::SchedulerAlreadyStoppedEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::SchedulerAlreadyStoppedEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::NoProposalExecutingEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::NoProposalExecutingEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::NoProposalExecutingEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::SystemInAutoModeEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::SystemInAutoModeEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::SystemInAutoModeEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::CannotOpenDeviceEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::CannotOpenDeviceEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::CannotOpenDeviceEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::ProposalDoesNotExistEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::ProposalDoesNotExistEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::ProposalDoesNotExistEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL
namespace CORBA {



 void operator<<= (::CORBA::Any &, const SYSTEMErr::TargetDoesNotExistEx &); // copying version
 void operator<<= (::CORBA::Any &, SYSTEMErr::TargetDoesNotExistEx*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const SYSTEMErr::TargetDoesNotExistEx *&);
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::SYSTEMErrEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::SYSTEMErrEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::AlreadyInAutomaticEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::AlreadyInAutomaticEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::PositionOutOfLimitsEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::PositionOutOfLimitsEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::ProposalNotYetReadyEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::ProposalNotYetReadyEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::InvalidProposalStatusTransitionEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::InvalidProposalStatusTransitionEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::ImageAlreadyStoredEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::ImageAlreadyStoredEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::CameraIsOffEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::CameraIsOffEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::SchedulerAlreadyRunningEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::SchedulerAlreadyRunningEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::SchedulerAlreadyStoppedEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::SchedulerAlreadyStoppedEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::NoProposalExecutingEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::NoProposalExecutingEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::SystemInAutoModeEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::SystemInAutoModeEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::CannotOpenDeviceEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::CannotOpenDeviceEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::ProposalDoesNotExistEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::ProposalDoesNotExistEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:36


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SYSTEMErr::TargetDoesNotExistEx &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SYSTEMErr::TargetDoesNotExistEx &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /alma/ACS-2025APR/TAO/ACE_wrappers/build/linux/TAO/TAO_IDL/be/be_codegen.cpp:1648

#if defined (__ACE_INLINE__)
#include "SYSTEMErrC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

